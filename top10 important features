import pandas as pd
from sklearn.feature_selection import RFE
from sklearn.model_selection import StratifiedKFold
from sklearn.svm import SVC
import numpy as np


# df = pd.read_excel(r'E:\result\svm\data\sivsfsi\sivsfsi.xlsx', engine='openpyxl', header=None)
df = pd.read_excel(r'E:\result\svm\data\sivsnc\mddvsnc.xlsx', engine='openpyxl', header=None)


X = df.iloc[:, :200].values 
y = df.iloc[:, 200].values   


svm_model = SVC(kernel="linear",probability=True)


n_features_to_select = 80
rfe = RFE(estimator=svm_model, n_features_to_select=n_features_to_select)


skf = StratifiedKFold(n_splits=5, shuffle=True, random_state=10)


feature_rankings = np.zeros(X.shape[1])


for i, (train_index, test_index) in enumerate(skf.split(X, y)):

    X_train, X_test = X[train_index], X[test_index]
    y_train, y_test = y[train_index], y[test_index]
    

    rfe.fit(X_train, y_train)
    

    feature_rankings += rfe.ranking_


avg_rankings = feature_rankings / 5


top_10_features = np.argsort(avg_rankings)[:10]


print("Top 10 important features (across 5 folds):")
for i, feature in enumerate(top_10_features):
    print(f"Feature {feature+1}: Average Rank = {avg_rankings[feature]:.4f}")
